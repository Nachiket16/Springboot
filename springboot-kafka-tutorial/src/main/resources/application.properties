#Kafka help in producer and consumer connection by acting as a broker

spring.kafka.consumer.bootstrap-servers: localhost:9092
# For multiple kafka broker you have to mention here

spring.kafka.consumer.group-id:myGroup

#This property specify if offset is not present
spring.kafka.consumer.auto-offset-rest:earliest

# PORT
spring.kafka.producer.bootstrap-servers: localhost:9092

spring.kafka.consumer.key-deserializer:org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer

# FOR STRING VALUE USE THIS
#spring.kafka.consumer.value-deserializer:org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer

# FOR JSON VALUE USE THIS
spring.kafka.consumer.value-deserializer:org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*     #(* means ALL packages are trusted )

spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
